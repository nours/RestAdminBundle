<?php
/*
 * This file is part of RestAdminBundle.
 *
 * (c) David Coudrier <david.coudrier@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Nours\RestAdminBundle\Tests\Api;

use Nours\RestAdminBundle\Api\ApiEvents;
use Nours\RestAdminBundle\Api\Event\ViewEvent;
use Nours\RestAdminBundle\Tests\AdminTestCase;
use Nours\RestAdminBundle\Api\ViewKernel;
use Nours\RestAdminBundle\Tests\Fixtures\Entity\Post;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;


/**
 * Class ViewKernelTest
 * 
 * @author David Coudrier <david.coudrier@gmail.com>
 */
class ViewKernelTest extends AdminTestCase
{
    /**
     * @var ViewKernel
     */
    private $viewKernel;

    public function setUp()
    {
        $this->viewKernel = $this->get('rest_admin.kernel.view');
    }

    public function testSimpleKernelResponse()
    {
        $resource = $this->getAdminManager()->getResourceCollection()->get('post');
        $action = $resource->getAction('get');

        $post = new Post(1);

        $request = Request::create('/posts/1');
        $request->attributes->add(array(
            '_resource' => 'post',
            '_action' => 'get'
        ));

        $dispatcher = $this->viewKernel->getDispatcher();

        $response = new Response();

        $dispatcher->addListener(ApiEvents::REQUEST_EVENT, $resource, $action, function(ViewEvent $event) use ($post) {
            $event->setModel($post);
        });

        $foundModel = null;
        $dispatcher->addListener(ApiEvents::RESPONSE_EVENT, $resource, $action, function(ViewEvent $event) use (&$foundModel, $response) {
            $foundModel = $event->getModel();
            $event->setResponse($response);
        });

        $result = $this->viewKernel->handle($request);

        $this->assertSame($response, $result);
        $this->assertSame($post, $foundModel);
    }

    public function testSimpleKernelReturnsResponse()
    {
        $resource = $this->getAdminManager()->getResourceCollection()->get('post');
        $action = $resource->getAction('index');

        $request = Request::create('/posts');
        $request->attributes->add(array(
            '_resource' => 'post',
            '_action' => 'index'
        ));

        $dispatcher = $this->viewKernel->getDispatcher();

        $response = new Response();

        $dispatcher->addListener(ApiEvents::REQUEST_EVENT, $resource, $action, function(ViewEvent $event) use ($response) {
            $event->setResponse($response);
        });

        $result = $this->viewKernel->handle($request);

        $this->assertSame($response, $result);
    }
}